unit HistoricoCli;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Buttons, Grids, DBGrids, Mask, Data.DB;

type
  TFHistoricoCli = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    mkCodCliente: TMaskEdit;
    SpeedButton2: TSpeedButton;
    MKCliente: TMaskEdit;
    Label1: TLabel;
    DBGrid1: TDBGrid;
    BitBtn1: TBitBtn;
    procedure BitBtn1Click(Sender: TObject);
    procedure SpeedButton2Click(Sender: TObject);
    procedure mkCodClienteExit(Sender: TObject);
    procedure mkCodClienteKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure SQLHistorico ;
    procedure FormKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FHistoricoCli: TFHistoricoCli;

implementation
Uses Data , Pesquisa;

{$R *.dfm}

procedure TFHistoricoCli.BitBtn1Click(Sender: TObject);
begin
   Close ;
end;

procedure TFHistoricoCli.SpeedButton2Click(Sender: TObject);
begin

   FPesquisa.Name := 'Clientes' ;  FPesquisa.Tabela.Caption := 'Clientes' ; FPesquisa.Ordem.Caption := 'RazaoSocial' ;
   FPesquisa.ShowModal ;
   If FPesquisa.RETORNO.Caption = 'FALSE' Then
      Exit ;

   mkCodCliente.Text  := FPesquisa.Query1.FieldByName( 'CodCliente' ).AsString ;
   mkCliente.Text     := FPesquisa.Query1.FieldByName( 'RazaoSocial' ).AsString ;

   SQLHistorico ;

end;

procedure TFHistoricoCli.mkCodClienteExit(Sender: TObject);
begin

   If Trim( mkCodCliente.Text ) <> '' Then begin

      With FDATA.CLIENTES Do begin
         SQL.Clear ;
         SQL.Add( 'Select * From Clientes' ) ;
         If Length( Trim( mkCodCliente.Text ) ) < 11 Then
            SQL.Add( 'Where CodCliente = ' + '''' + mkCodCliente.Text + ''''  )
         Else
            SQL.Add( 'Where CNPJ = ' + '''' + mkCodCliente.Text + ''''  ) ;

         Open ;
      End ;
      If FDATA.CLIENTES.IsEmpty Then begin
         MessageDlg( '   Cliente não Cadastrado !   ', mtWarning, [mbOk], 0 ) ;
         mkCodCliente.Clear ; mkCliente.Clear ;
         mkCodCliente.SetFocus ;
         Exit ;
      End ;

      mkCliente.Text := FDATA.CLIENTES.FieldByName( 'RazaoSocial' ).AsString ;

      SQLHistorico ;

   End
   else
      mkCliente.Text := '0' ;

end;

procedure TFHistoricoCli.mkCodClienteKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
   If Key = VK_F2 Then
      SpeedButton2Click( Sender ) ;
end;

procedure TFHistoricoCli.SQLHistorico;
begin

   With FDATA.CorpoPed Do begin
      SQL.Clear ;
      SQL.Add( 'Select C.NumPedido, A.Emissao as "Data", C.Descricao, F.Nome as "Marca", C.Qtde, C.ValorUnit' ) ;
      SQL.Add( 'From CorpoPed C' ) ;
      SQL.Add( 'Left join CabPed A On A.NumPedido = C.NumPedido' ) ;
      SQL.Add( 'Left join Produtos P On P.CodProduto = C.Codproduto' ) ;
      SQL.Add( 'Left join Fabricantes F On F.CodFabricante = P.CodFabricante' ) ;
      SQL.Add( 'Where A.CodCliente = ' + mkCodCliente.Text ) ;
      SQL.Add( 'Order by C.NumPedido' ) ;
      Open ;
      Last ;
   End ;

   FDATA.CorpoPed.FieldByName( 'Descricao' ).DisplayWidth := 50 ;

    DBGrid1.Visible := TRUE ;

end;

procedure TFHistoricoCli.FormKeyPress(Sender: TObject; var Key: Char);
begin

   If ( Key = #13 ) Then begin
      Key := #0 ;
      PostMessage( HANDLE, WM_KEYDOWN, VK_TAB, 1 );
   End;

   If ( Key = #27 ) Then
      Close ;

end;

end.