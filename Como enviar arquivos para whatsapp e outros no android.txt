uses
{$IFDEF ANDROID}Androidapi.JNI.GraphicsContentViewText,
Androidapi.JNI.App,
Androidapi.Helpers,
FMX.Platform.Android,
Androidapi.JNI.JavaTypes,
Androidapi.JNI.Net,
Androidapi.JNI.Os,System.IoUtils,
DW.Androidapi.JNI.FileProvider,
DW.Android.Helpers{$ENDIF};
{DW.Androidapi.JNI.FileProvider, DW.Android.Helpers // Kastri Free GitHub https://bit.ly/2WBnoXM};



procedure TfPrecos.actEnviarExecute(Sender: TObject);
var
  LIntent: JIntent;
  LAuthority: JString;
  LUri: Jnet_Uri;
  LFileName: string;
begin
  LFileName := TPath.Combine(TPath.GetSharedDocumentsPath, 'Precos.txt');
  LAuthority := StringToJString
    (JStringToString(TAndroidHelper.Context.getApplicationContext.
    getPackageName) + '.fileprovider');
  LUri := TJFileProvider.JavaClass.getUriForFile(TAndroidHelper.Context,
    LAuthority, TJFile.JavaClass.init(StringToJString(LFileName)));
  if chVer.IsChecked then
  begin
    LIntent := TJIntent.JavaClass.init(TJIntent.JavaClass.ACTION_VIEW);
  end
  else
  begin
    LIntent := TJIntent.JavaClass.init(TJIntent.JavaClass.ACTION_SEND);
    //
    LIntent.putExtra(TJIntent.JavaClass.EXTRA_STREAM,
      TJParcelable.Wrap((LUri as ILocalObject).GetObjectID));
    /// Adicionar Anexo (Se a action for SEND)
  end;

  LIntent.setDataAndType(LUri, StringToJString('text/plain'));
  LIntent.setFlags(TJIntent.JavaClass.FLAG_GRANT_READ_URI_PERMISSION);
  TAndroidHelper.Activity.startActivity(LIntent);
end;
